name: Run Postman API Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  postman-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Newman (Postman CLI)
        run: npm install -g newman

      - name: Create Postman directory
        run: mkdir -p ./postman

      - name: Download Postman Collection from Postman
        run: |
          curl -X GET "https://api.getpostman.com/collections/${{ vars.POSTMAN_COLLECTION_UID }}" \
          -H "X-Api-Key: ${{ secrets.POSTMAN_API_KEY }}" \
          -o ./postman/public-api-testing.json

      - name: Download Postman Environment from Postman (Develop)
        if: github.ref == 'refs/heads/develop'
        run: |
          curl -X GET "https://api.getpostman.com/environments/${{ vars.POSTMAN_DEVELOP_ENV_UID }}" \
          -H "X-Api-Key: ${{ secrets.POSTMAN_API_KEY }}" \
          -o ./postman/environment-develop.json

      - name: Download Postman Environment from Postman (Main)
        if: github.ref == 'refs/heads/main'
        run: |
          curl -X GET "https://api.getpostman.com/environments/${{ vars.POSTMAN_PROD_ENV_UID }}" \
          -H "X-Api-Key: ${{ secrets.POSTMAN_API_KEY }}" \
          -o ./postman/environment-prod.json

      - name: Run Postman Collection with Environment
        run: |
          set -x  # Enable debug mode to show commands
          BRANCH_NAME=$(basename ${GITHUB_REF})
          if [ "$BRANCH_NAME" = "develop" ]; then
            newman run ./postman/public-api-testing.json -e ./postman/environment-develop.json
          elif [ "$BRANCH_NAME" = "main" ]; then
            newman run ./postman/public-api-testing.json -e ./postman/environment-prod.json
          fi
